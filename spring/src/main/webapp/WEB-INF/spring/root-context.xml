<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd
	http://mybatis.org/schema/mybatis-spring
	http://mybatis.org/schema/mybatis-spring-1.2.xsd">
	
	<!-- Root Context: Service(비지니스 로직처리), DB관련 설정 -->
	<!-- 커넥션 풀 세팅 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" /> 
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@192.168.100.250:1521:ORCL" />
		<property name="username" value="project01" />
		<property name="password" value="project01" />
	</bean>
	
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	
	<!--  MyBatis 연동 설정 property 1 .연결 2. 별칭 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	</bean>
	
	
	<!-- MyBatis Mapper 스캔하도록 패키지 지정: 패키지 안의 모든 Mybatis어노테이션들 찾아서 처리 -->
	<!-- 스키마를 추가했음 mybatis 스프링 mybatis는 DB연결 관련 하는프레임워크 어노테이션 기능으로는 
		@select , insert 이런 DB관련 어노테이션 들이 있음
	-->
	<mybatis-spring:scan base-package="com.spring.mapper"/>
	
	
	
	
	
	
	
	
	
	
	
	
	<bean id="day" class="java.util.Date"/>
	<bean id="day2" class="java.util.Date"/>
	
	
	
	<!-- property : set 메서드 호출하여 지정한 값 채워서 빈으로 등록(객체생성)
		value : 기본형과 문자열 타입의 값을 채우는 속성명(property name="reg" value="day"/) value가 아니다
		ref: 객체를 값으로 채우는 속성명
	<bean id="tv" class="com.spring.dto.SampleTv">
		<property name="power" value="true"/>
		<property name="ch" value="10"/>
		<property name="col" value="white"/>
		<property name="reg" ref="day"/>
	</bean>
	-->
	
	
	<!-- 생성자로 만들어보기 
		constructor-arg : 생성자를 이용하여 값을 채워 빈으로 등록
		value 만 작성 : 생성자 매개변수 순서에 따라 채워줌(모호함)
			<constructor-arg  value="true"/>
		index : 생성자로 보내는 매개변수의 순서 지정
			<constructor-arg index="0" value="true"/>
		type : 생성자의 매개변수의 타입을 지정해서 채워줌
				value="100" int
				value="10"	long 이런상황일때 씀
			<constructor-arg value="true" type="int"/>
		name : 생성자의 매개변수 이름을 name 속성으로 지정해 매핑	
	-->
	<bean id="tv" class="com.spring.dto.SampleTv">
		<constructor-arg index="0" value="true"/>
		<constructor-arg index="1" value="100"/>
		<constructor-arg index="2" value="green"/>
		<constructor-arg index="3" ref="day"/>
	</bean>
	
	
	
		
</beans>
