<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring.mapper.DynamicMapper">
  
  
  <select id="selectIf" resultType="int">
  		select count(*) from test 
  		<if test="value !=null">
	  		where id=#{value}
  		</if>
  </select>
  
  
  <!-- 두번째 데이터만 보낼경우 에러발생가능 where 가 없기 때문 : 문제 발생! -->
  <select id="selectIf2" resultType="int">
  		select count(*) from test
  		<if test="id!=null">
	  		where id=#{id}
  		</if>
  		<if test="pw!=null">
	  		and pw=#{pw}
  		</if>
  </select>
  
  <!-- 문제해결 방안 #1. 회피하기 -->
  <select id="selectIf3" resultType="int">
  		select count(*) from test where id=#{id}
  		<if test="pw!=null">
	  		and pw=#{pw}
  		</if>
  </select>
  
  <!-- 문제해결 방안 #2. trim -->
  <select id="selectTrim" resultType="int">
  		select count(*) from test 
  		
  		<trim prefix="where" prefixOverrides="and|or">
	  		<if test=" id!=null ">
		  		id=#{id}
	  		</if>
	  		<if test="pw!=null">
		  		and pw=#{pw}
	  		</if>
  		</trim>
  </select>
  
  
  <update id="updateTest">
  		
  		update test
  		<trim prefix="set" suffixOverrides=",">
  			<if test="pw!=null">
		  		pw =#{pw},
  			</if>
			<if test="age!=null">
		  		age=#{age}
			</if>  			
  		</trim>
  		
  		where id =#{id}	
  </update>
  
  <select id="choose" resultType="int">
  		select count(*) from test where id=#{}
  		<choose>
  			<when test="pw!=null">and pw=#{pw}</when>
  			<when test="age!=null">and age=#{age}</when>
  			<otherwise>and name=#{name}</otherwise>
  		</choose>
  </select>
	
	
	<select id="selectIn" resultType="int">
		select count(*) from test where id in 
		<foreach collection="list" item="item" open="(" separator="," close=")" >
			#{item}
		</foreach> 
	</select>  
  
	<!-- age 값을 update 해줄때, age 값을 현재 테이블의 전체 레코드 개수로 수정 
		시퀀스를 이용할떄 유용하게 쓰임
	-->  
	
	<update id="updateKey" >
		<selectKey keyProperty="age" resultType="int" order="BEFORE">
			select count(*) from test
		</selectKey>
		update test set pw=#{pw}, age=#{age} where id=#{id}
	</update>
	
	
	<insert id="insertKey">
		insert into test values (#{id}, #{pw}, test_seq.nextval, sysdate)
		<selectKey keyProperty="age" resultType="int"  order="AFTER">
			select test_seq.currval from dual
		</selectKey>
		
	</insert>
  
  
  
  
  
  </mapper>